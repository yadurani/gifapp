{"version":3,"sources":["components/GifExpertApp/AddCategory.jsx","helpers/noDuplicated.js","helpers/getGift.js","hooks/useFetchGift.js","components/GifExpertApp/GridItem.jsx","components/GifExpertApp/LoadingSekeleton.jsx","components/GifExpertApp/GridList.jsx","components/GifExpertApp/Wrapper.jsx","index.js"],"names":["AddCategory","handleAdd","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","onChange","target","value","placeholder","type","getDataNoDuplicated","data","Set","map","a","id","find","getGif","category","page","url","encodeURI","fetch","response","json","pagination","gifs","img","title","images","downsized_medium","useFetchGift","offset","setOffset","loading","state","setstate","disableBtn","setDisabledBtn","fetchImages","prevState","total_count","useEffect","handlePage","GridItem","className","src","alt","LoadingSkeleton","Array","fill","_","i","GridList","imagesFinally","noData","disabled","onClick","rest","GifExpertAppWrapper","categories","setCategories","href","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eaf70918.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ handleAdd }) => {\n  const [inputValue, setInputValue] = useState('')\n  \n  const handleChange = (e) => setInputValue(e.target.value)\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(inputValue.trim().length > 2) {\n      handleAdd(inputValue)\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        placeholder=\"Search\"\n        value={inputValue}\n        type=\"text\"\n        />\n    </form>\n  )\n};\n\nAddCategory.propTypes = {\n  handleAdd: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","const getDataNoDuplicated = (data) => {\n  return [...new Set(data.map(a => a.id))].map(id => {\n    return data.find(a => a.id === id)\n  })\n}\nexport default getDataNoDuplicated","const getGif = async ( category, page ) => {\n  const URL_API = 'http://api.giphy.com/v1/gifs/search?q='\n  const API_KEY = '9A6jp0e4admbMZUm8bRFJ9VwZiW9r8R6'\n  const url = `${URL_API}${encodeURI(category)}&limit=10&offset=${page}&api_key=${API_KEY}`\n  const response = await fetch(url)\n  const { data, pagination } = await response.json()\n  const gifs = data.map(img => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url\n  }))\n  return {gifs, pagination}\n}\n\nexport default getGif","import { useState, useEffect } from 'react';\n\nimport getGif from '../helpers/getGift';\n\nconst useFetchGift = (category) => {\n  const [offset, setOffset] = useState(0)\n  const [state, setstate] = useState({\n    data: [],\n    pagination: null,\n    loading: true,\n  })\n  const [disableBtn, setDisabledBtn] = useState(false)\n\n  const fetchImages = async () => {\n    const response = await getGif(category, offset * 10)\n    setstate(prevState => ({\n      ...prevState,\n      data: [ ...response.gifs, ...prevState.data ],\n      pagination: response.pagination.total_count,\n      offset: offset * 10,\n      loading: false,\n    }))\n  }\n\n  const handlePage = () => {\n    if(state.offset >= state.pagination) {\n      setDisabledBtn(true)\n    }\n    if(state.offset <= state.pagination){\n      setOffset(prevState => prevState + 1)\n    }\n  }\n  \n  useEffect(() => {\n    fetchImages()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [category, offset])\n\n  return {state, disableBtn, handlePage}\n}\n\nexport default useFetchGift\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GridItem = ({ url, title }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title}/>\n    </div>\n  )\n};\n\nGridItem.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default GridItem\n","import React from 'react'\n\nconst LoadingSkeleton = () => {\n  return Array(12).fill(10).map((_, i) => (\n    <div className=\"skeleton__wrapper\" key={i}></div>\n  ))\n}\n\nexport default LoadingSkeleton\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getDataNoDuplicated from '../../helpers/noDuplicated';\nimport useFetchGift from '../../hooks/useFetchGift';\n\nimport GridItem from './GridItem';\nimport LoadingSkeleton from './LoadingSekeleton';\n\nconst GridList = ({ category }) => {\n  const { state, handlePage, disableBtn } = useFetchGift(category)\n  const { data: images, loading  } = state\n  const imagesFinally = getDataNoDuplicated(images)\n  const noData = imagesFinally.length === 0\n\n  return (\n    <>\n      <div className=\"subtitle\">\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        <hr/>\n        {!noData && <button disabled={disableBtn} onClick={handlePage}>Ver mÃ¡s</button>}\n      </div>\n      {noData && !loading && <div className=\"notfound\">Ups!! Not found, try again.</div>}\n      <div className=\"card-grid\">\n        {loading && <LoadingSkeleton/>}\n        {imagesFinally?.map(({ id, ...rest }) => <GridItem key={id} {...rest}/>)}\n      </div>\n    </>\n  )\n};\n\nGridList.propTypes = {\n  category: PropTypes.string\n}\n\nexport default GridList\n","import React, { useState } from 'react';\nimport AddCategory from './AddCategory';\nimport GridList from './GridList';\n\nconst GifExpertAppWrapper = () => {\n  const [categories, setCategories] = useState(['One punch'])\n\n  const handleAdd = (value) => setCategories(prevState => ([ value , ...prevState ]))\n  \n  return (\n    <div className=\"container\">\n      <h2 className=\"title\">\n        .GIFAPP.\n      </h2>\n      <AddCategory handleAdd={handleAdd}/>\n      <ol>\n        {categories?.map((category) => (\n          <GridList key={category} category={category}/>\n        ))}\n      </ol>\n      <small>\n        Create by Yadu LÃ³pez ðŸ’›. Github <a href=\"https://yadurani.github.io/gifapp/\" target=\"_blank\" rel=\"noreferrer\">GIFAPP</a>.\n      </small>\n    </div>\n  )\n};\n\nexport default GifExpertAppWrapper\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp/Wrapper';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}